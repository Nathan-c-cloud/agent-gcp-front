#!/bin/bash

# ========================================
# Script de d√©ploiement automatis√© sur Cloud Run
# ========================================

set -e  # Arr√™ter en cas d'erreur

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
PROJECT_ID="agent-gcp-f6005"
SERVICE_NAME="agent-gcp-unified"
REGION="us-west1"
IMAGE_NAME="agent-gcp-unified"

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}üöÄ D√©ploiement sur Google Cloud Run${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# √âtape 1: V√©rifier la connexion GCP
echo -e "${YELLOW}üì° V√©rification de la connexion GCP...${NC}"
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" &> /dev/null; then
    echo -e "${RED}‚ùå Erreur: Vous n'√™tes pas connect√© √† Google Cloud${NC}"
    echo -e "${YELLOW}Ex√©cutez: gcloud auth login${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Connect√© √† GCP${NC}"
echo ""

# √âtape 2: Configurer le projet
echo -e "${YELLOW}üîß Configuration du projet: ${PROJECT_ID}${NC}"
gcloud config set project ${PROJECT_ID}
echo -e "${GREEN}‚úÖ Projet configur√©${NC}"
echo ""

# √âtape 3: Build de l'image Docker
echo -e "${YELLOW}üèóÔ∏è  Build de l'image Docker...${NC}"
docker build -t ${IMAGE_NAME}:latest -f Dockerfile .
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Image build√©e avec succ√®s${NC}"
else
    echo -e "${RED}‚ùå Erreur lors du build de l'image${NC}"
    exit 1
fi
echo ""

# √âtape 4: Tagger l'image pour GCR
echo -e "${YELLOW}üè∑Ô∏è  Tag de l'image pour Google Container Registry...${NC}"
docker tag ${IMAGE_NAME}:latest gcr.io/${PROJECT_ID}/${IMAGE_NAME}:latest
docker tag ${IMAGE_NAME}:latest gcr.io/${PROJECT_ID}/${IMAGE_NAME}:$(date +%Y%m%d-%H%M%S)
echo -e "${GREEN}‚úÖ Image tagu√©e${NC}"
echo ""

# √âtape 5: Push de l'image vers GCR
echo -e "${YELLOW}‚òÅÔ∏è  Push de l'image vers Google Container Registry...${NC}"
docker push gcr.io/${PROJECT_ID}/${IMAGE_NAME}:latest
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Image pouss√©e avec succ√®s${NC}"
else
    echo -e "${RED}‚ùå Erreur lors du push de l'image${NC}"
    exit 1
fi
echo ""

# √âtape 6: D√©ploiement sur Cloud Run
echo -e "${YELLOW}üö¢ D√©ploiement sur Cloud Run...${NC}"
gcloud run deploy ${SERVICE_NAME} \
  --image gcr.io/${PROJECT_ID}/${IMAGE_NAME}:latest \
  --platform managed \
  --region ${REGION} \
  --allow-unauthenticated \
  --port 8080 \
  --memory 512Mi \
  --cpu 1 \
  --max-instances 10 \
  --timeout 300

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ D√©ploiement r√©ussi${NC}"
else
    echo -e "${RED}‚ùå Erreur lors du d√©ploiement${NC}"
    exit 1
fi
echo ""

# √âtape 7: Forcer le red√©marrage du service
echo -e "${YELLOW}üîÑ Red√©marrage forc√© du service pour appliquer les changements...${NC}"
gcloud run services update ${SERVICE_NAME} \
  --region ${REGION} \
  --update-env-vars DEPLOY_TIME=$(date +%s)

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Service red√©marr√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Avertissement: Le red√©marrage a √©chou√© mais le service est d√©ploy√©${NC}"
fi
echo ""

# √âtape 8: R√©cup√©rer l'URL du service
echo -e "${YELLOW}üåê R√©cup√©ration de l'URL du service...${NC}"
SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --region ${REGION} --format='value(status.url)')
echo -e "${GREEN}‚úÖ Service accessible √†:${NC}"
echo -e "${BLUE}${SERVICE_URL}${NC}"
echo ""

# √âtape 9: Afficher les logs r√©cents
echo -e "${YELLOW}üìã Logs r√©cents (30 derni√®res lignes):${NC}"
gcloud run services logs read ${SERVICE_NAME} --region ${REGION} --limit 30
echo ""

# R√©sum√© final
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}‚úÖ D√âPLOIEMENT TERMIN√â AVEC SUCC√àS !${NC}"
echo -e "${GREEN}========================================${NC}"
echo ""
echo -e "${BLUE}üìä Informations du d√©ploiement:${NC}"
echo -e "  ‚Ä¢ Projet: ${PROJECT_ID}"
echo -e "  ‚Ä¢ Service: ${SERVICE_NAME}"
echo -e "  ‚Ä¢ R√©gion: ${REGION}"
echo -e "  ‚Ä¢ URL: ${SERVICE_URL}"
echo ""
echo -e "${BLUE}üîó Liens utiles:${NC}"
echo -e "  ‚Ä¢ Console Cloud Run: https://console.cloud.google.com/run/detail/${REGION}/${SERVICE_NAME}/metrics?project=${PROJECT_ID}"
echo -e "  ‚Ä¢ Application: ${SERVICE_URL}"
echo ""
echo -e "${YELLOW}üí° Commandes utiles:${NC}"
echo -e "  ‚Ä¢ Voir les logs: gcloud run services logs tail ${SERVICE_NAME} --region ${REGION}"
echo -e "  ‚Ä¢ Health check: curl ${SERVICE_URL}/health"
echo ""
